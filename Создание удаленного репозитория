--------------------------------------------------------------------------------------------------
============================================= ПОЛЕЗНО ============================================
######## Просмотреть все директории в данной директории (через Putty) ########
cd tab + tab
--------------------------------------------------------------------------------------------------
============================================= ПОЛЕЗНО ============================================

###КОММЕНТАРИИ###
###### Справочник команд Putty / SSH / Unix / Linux - http://putty.eves.ru/ ######
###### Создание локальной версии сайта, и связывание его с удаленным репозиторием git, 
      находищимся на боевом сервере (или тестово-боевом) для коммандной разработки или 
      возможности автоматизированой разработки для одного разработчика. ######


====================================== НА ЛОКАЛЬНОМ ХОСТЕ 1 ======================================
--------------------------------------------------------------------------------------------------
1. ### Заводим локальный проект ###

############################# COMMENT ############################
------------------------------------------------------------------
Если комманде разработчиков, у кого-то уже есть файлы проекта, 
    то ВЫ пропускаете следующую часть инструкции (НА ЛОКАЛЬНОМ ХОСТЕ 1),
    а тот у кого УЖЕ есть файлы проекта, завершает данную инструкцию 
    до конца.
##################################################################
############################# COMMENT ############################
##################################################################
Если вы разрабатываете один или 
    у вас есть что-то в локальном проекте или
    проект только начали, то вы завершаете данную инструкцию до конца,
    а остальные разработчики, заканчивают на данном этапе.
------------------------------------------------------------------
############################# COMMENT ############################

2. ### В локальной консоли инициализирум локальный git,
добавляем в него текущий state проекта и коммитимся ###

cd projectName  
######## cd C:\OpenServer\domains\yarmarka-horeca ### 

git init	      
######## Эта команда создаёт в текущем каталоге новый подкаталог с именем .git содержащий все необходимые файлы репозитория — 
        основу Git-репозитория ########
        
git add .       
######## Начать отслеживать (добавить под версионный контроль) файлы 
      ("." - все файлы, которые не были исключены .gitignore) ########

git commit -a   
######## Откроет редактор, выйти из редактора "q" или "ctrl + q"
или
git commit -a -m 'initial commit' 
######## Сохранит коммит прямо из консоли 

--------------------------------------------------------------------------------------------------
====================================== НА ЛОКАЛЬНОМ ХОСТЕ 1 ======================================

====================================== НА БОЕВОМ СЕРВЕРЕ =========================================
--------------------------------------------------------------------------------------------------
3. ######  Далее, идем на git сервер - Подключаемся через Putty ######
cd /var/git
mkdir projectName 
######## mkdir dir – создать каталог dir (make directory - создать каталог) 

chmod g+s projectName 
######## сменить права на каталог

//chmod u+s projectName
######## зайти в каталог ########
git init --bare 
######## инициализирует репозиторий без рабочего каталог 

git config core.sharedRepository true  
######## Указываем, что данные репозиторий общий для группы пользователей. 

find . -type d -exec chmod g+sw {}

###### Уходим с сервера ###### 
--------------------------------------------------------------------------------------------------
====================================== НА БОЕВОМ СЕРВЕРЕ =========================================

====================================== НА ЛОКАЛЬНОМ ХОСТЕ 2 ======================================
--------------------------------------------------------------------------------------------------
4. ###### Идем в локальный проект ######

#####################################
-------------------------------------
Если комманде разработчиков, у кого-то уже есть файлы проекта, то после того как эти файлы будут запушены,
Остальные, из созданного локального репозитория, должны ввести команду:
-------------------------------------
#####################################

git clone olegr@3beta.ru:/var/git/path-to-directory/ C:\path\to\local-repository\ 
######## (в какой репозиторий клонировать и в какую папку)
######## автоматически добавит внешний репозиторий под alias-ом origin
######## склонирует все файлы и папки из удаленного репозитория

#####################################
-------------------------------------
Если комманде разработчиков, у кого-то уже есть файлы проекта: 
-------------------------------------
#####################################

cd projectName 
######## cd C:\OpenServer\domains\yarmarka-horeca 

4.1. ###### Проверяем, лежит ли проект уже под каким-то upstream репозиторием ######
git remote -v  
######## Проверка наличия удаленных репозиториев 

###### если ответит, что то типа: ######
origin  git@gitlab.silversite.ru:ss-cms-dev-team/cms-v3.git (fetch)
origin  git@gitlab.silversite.ru:ss-cms-dev-team/cms-v3.git (push)

4.1.1. ###### то выносим его из под старого upstream репозитория. Для этого ######
git remote rm origin

4.1.2. ###### если не ответит ничего, то ничего не делаем ######

4.3. ###### Добавляем внешний репозиторий под alias-ом origin ######
git remote add origin olegr@3beta.ru:/var/git/path-to-directory/

4.4. ###### И, наконец, говорим своему локальному git-у ######
git push --set-upstream origin master  
######## (пушаем и одновременно связываем удаленный репозиторий с локальным) 
--------------------------------------------------------------------------------------------------
====================================== НА ЛОКАЛЬНОМ ХОСТЕ 2 =======================================



--------------------------------------------------------------------------------------------------
===================================== РЕШЕНИЕ ПРОБЛЕМ ============================================

Если создан репозиторий без --bare, тогда
rm -rf /path/to/project/* 
######## рекурсивно удалит все файлы и папки в данной директории 
######## Заново создать репозиторий и далее по инструкции

